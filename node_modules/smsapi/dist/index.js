"use strict";var t=require("axios"),e=require("querystring"),s=require("fs"),a=require("form-data");function n(t){return t&&t.__esModule?t:{default:t}}var r=n(t),i=n(s),o=n(a),c=t=>null!==t&&"object"==typeof t,p=(t,e)=>{if(void 0===t||!c(t))return t;const s={};return Object.entries(t).forEach((([t,a])=>{s[e(t)]=a})),s},l=t=>{const e=t.replace(/[-_\s.]+(.)?/g,((t,e)=>e?e.toUpperCase():""));return e.substring(0,1).toLowerCase()+e.substring(1)},h=t=>p(t,l),u=t=>{const e=h(t);return Object.entries(e).forEach((([t,s])=>{s instanceof Date||(Array.isArray(s)?e[t]=s.map((t=>!c(t)||t instanceof Date?t:h(t))):c(s)&&(e[t]=h(s)))})),e},d=t=>{const{data:e}=t;return e?Array.isArray(e)?e.map(u):(t=>!!t.collection&&!!t.size)(e)?{...e,collection:e.collection.map(u)}:(t=>!!t.list&&!!t.count)(e)?{...e,list:e.list.map(u)}:u(e):e},m=class{httpClient;constructor(t){this.httpClient=t}},w=t=>t.replace(/[A-Z]/g,(t=>`_${t}`)).replace(/[-\s]/g,"_").replace(/^_+|_+$/g,"").toLowerCase(),y=t=>t.toISOString().slice(0,10),g=t=>p(t,w),f=t=>{const{data:s,method:a,params:n}=t;if(["get","delete"].includes(a.toLowerCase())){let s=((t,e)=>{if(void 0===t||!c(t))return t;const s={};return Object.entries(t).forEach((([t,a])=>{s[t]=e(a,t)})),s})(n,((t,e)=>"birthdayDate"===e?Array.isArray(t)?t.map(y).join(","):t instanceof Date?y(t):t:Array.isArray(t)?t.join(","):t));return s=g(s),{...t,params:s,paramsSerializer:t=>e.stringify(t)}}return s?{...t,data:e.stringify(g(s))}:t},C=class extends m{async get(){return await this.httpClient.get("/contacts/groups")}async getById(t){return await this.httpClient.get(`/contacts/groups/${t}`)}async create(t,e){return await this.httpClient.post("/contacts/groups",{name:t,...e})}async update(t,e){return await this.httpClient.put(`/contacts/groups/${t}`,e)}async remove(t,e=!1){await this.httpClient.delete(`/contacts/groups/${t}`,{params:{deleteContacts:e}})}},v=t=>t.date_created||t.date_updated?{...t,date_created:new Date(t.date_created),date_updated:new Date(t.date_updated)}:{...t},b=t=>{const{data:e}=t;return(t=>!!t.size&&!!t.collection)(e)?{...t,data:{collection:e.collection.map((t=>v(t))),size:e.size}}:{...t,data:v(e)}},A=class extends m{async get(){return await this.httpClient.get("/contacts/fields")}async create(t,e="text"){return await this.httpClient.post("/contacts/fields",{name:t,type:e})}async update(t,e){return await this.httpClient.put(`/contacts/fields/${t}`,{name:e})}async remove(t){await this.httpClient.delete(`/contacts/fields/${t}`)}},S=class extends m{contactHttpClient;fields;groups;constructor(t){super(t),this.contactHttpClient=r.default.create({adapter:t.defaults.adapter,baseURL:t.defaults.baseURL,headers:t.defaults.headers}),this.contactHttpClient.interceptors.request.use(f),this.contactHttpClient.interceptors.response.use(b),this.contactHttpClient.interceptors.response.use(d),this.fields=new A(this.contactHttpClient),this.groups=new C(this.contactHttpClient)}async get(t){return await this.contactHttpClient.get("/contacts",{params:t})}async getById(t){return await this.contactHttpClient.get(`/contacts/${t}`)}async create(t,e){return await this.contactHttpClient.post("/contacts",{phone_number:t,...this.formatContactDetails(e||{})})}async update(t,e){return await this.contactHttpClient.put(`/contacts/${t}`,{...this.formatContactDetails(e||{})})}async remove(t){await this.contactHttpClient.delete(`/contacts/${t}`)}async getGroups(t){return await this.contactHttpClient.get(`/contacts/${t}/groups`)}async getGroupById(t,e){return await this.contactHttpClient.get(`/contacts/${t}/groups/${e}`)}async assignContactToGroup(t,e){return await this.contactHttpClient.put(`/contacts/${t}/groups/${e}`)}async unpinContactFromGroup(t,e){await this.contactHttpClient.delete(`/contacts/${t}/groups/${e}`)}formatContactDetails(t){const e=t;return t.birthdayDate&&(e.birthdayDate=y(t.birthdayDate)),p(e,w)}},$=class extends m{async check(t,e){const s={number:Array.isArray(t)?t.join(","):t};return e&&(s.idx=Array.isArray(e)?e.join(","):e),await this.httpClient.post("/hlr.do",void 0,{params:{format:"json",...s}})}};function D(t){return void 0!==t.error&&void 0!==t.message}var _=class extends Error{data;constructor(t){super(),Error.captureStackTrace(this,this.constructor),this.name="MessageError",this.data=t}},j=class extends m{endpoint;async send(t,e,s){const a={details:!0,encoding:"utf-8",format:"json",...this.formatSmsDetails(s||{})};if(this.isNumberRecipient(e)){const{to:t}=e;a.to=Array.isArray(t)?t.join(","):t}if(this.isGroupRecipient(e)){const{group:t}=e;a.group=Array.isArray(t)?t.join(","):t}if(this.isSms(t)&&(a.message=t.message.trim()),this.isMms(t)&&(a.subject=t.subject.trim(),a.smil=t.smil),this.isVmsText(t)&&(a.tts=t.tts.trim(),a.tts_lector=t.ttsLector||"ewa"),this.isVmsRemotePath(t)&&(a.file=t.remotePath),this.isVmsLocalFile(t)){const e=this.getFormDataForVmsLocalFile(a,t),s=await this.httpClient.post(this.endpoint,e.getBuffer(),{headers:e.getHeaders()});if(D(s))throw new _(s);return this.formatResponse(s)}const n=await this.httpClient.post(this.endpoint,a);if(D(n))throw new _(n);return this.formatResponse(n)}isNumberRecipient(t){return void 0!==t.to}isGroupRecipient(t){return void 0!==t.group}isSms(t){return void 0!==t.message}isMms(t){return void 0!==t.smil&&void 0!==t.subject}isVmsText(t){return void 0!==t.tts}isVmsLocalFile(t){return void 0!==t.localPath}isVmsRemotePath(t){return void 0!==t.remotePath}getFormDataForVmsLocalFile(t,e){const s=new o.default;t.to&&s.append("to",t.to),t.group&&s.append("group",t.group);for(const[e,a]of Object.entries(t))"boolean"!=typeof a?s.append(e,a):s.append(e,a?1:0);return s.append("file",i.default.readFileSync(e.localPath),{contentType:"audio/wav",filename:"vms.wav"}),s}formatSmsDetails(t){const e=t;return t.date&&(e.dateValidate=!0,e.date=t.date.toISOString()),t.expirationDate&&(e.expirationDate=t.expirationDate.toISOString()),p(e,(t=>/param[1-4]/.test(t)?t:"noUnicode"===t?t.toLowerCase():w(t)))}formatResponse(t){return{...t,list:t.list.map((t=>({...t,dateSent:new Date(1e3*t.dateSent),points:"string"==typeof t.points?parseFloat(t.points):t.points})))}}},x=class extends j{endpoint="/mms.do";async sendMms(t,e,s,a){return await this.send({smil:s,subject:e},{to:t},a)}async sendMmsToGroup(t,e,s,a){return await this.send({smil:s,subject:e},{group:t},a)}},H=class extends m{async get(){return await this.httpClient.get("/profile")}},F=class extends m{async get(){const t=await this.httpClient.get("/sms/sendernames");return{...t,collection:t.collection.map(this.formatSendernameDates)}}async getBySender(t){const e=await this.httpClient.get(`/sms/sendernames/${t}`);return this.formatSendernameDates(e)}async create(t){const e=await this.httpClient.post("/sms/sendernames",{sender:t});return this.formatSendernameDates(e)}async makeDefault(t){await this.httpClient.post(`/sms/sendernames/${t}/commands/make_default`)}async remove(t){await this.httpClient.delete(`/sms/sendernames/${t}`)}formatSendernameDates(t){return{...t,createdAt:new Date(t.createdAt)}}},L=class extends j{endpoint="/sms.do";async sendSms(t,e,s){return await this.send({message:e},{to:t},s)}async sendFlashSms(t,e,s){return await this.sendSms(t,e,{...s,flash:!0})}async sendSmsToGroup(t,e,s){return await this.send({message:e},{group:t},s)}async sendFlashSmsToGroup(t,e,s){return await this.sendSmsToGroup(t,e,{...s,flash:!0})}async removeScheduledSms(t){const e=Array.isArray(t)?t.join(","):t;return await this.httpClient.post(this.endpoint,{format:"json",sch_del:e})}},T=class extends m{async get(){return await this.httpClient.get("/subusers")}async getById(t){return await this.httpClient.get(`/subusers/${t}`)}async create(t){const{credentials:e,points:s}=t;return await this.httpClient.post("/subusers",{...t,credentials:{api_password:e.apiPassword,password:e.password,username:e.username},points:s?{from_account:s.fromAccount,per_month:s.perMonth}:void 0})}async update(t,e){const{credentials:s,points:a}=e;return await this.httpClient.put(`/subusers/${t}`,{...e,credentials:s&&(s.password||s.apiPassword)?{api_password:s.apiPassword,password:s.password}:void 0,points:a&&(a.fromAccount||a.perMonth)?{from_account:a.fromAccount,per_month:a.perMonth}:void 0})}async remove(t){await this.httpClient.delete(`/subusers/${t}`)}},V=class extends m{async get(){return await this.httpClient.get("/sms/templates")}async getById(t){return await this.httpClient.get(`/sms/templates/${t}`)}async create(t){return await this.httpClient.post("/sms/templates",t)}async update(t,e){return await this.httpClient.put(`/sms/templates/${t}`,e)}async remove(t){await this.httpClient.delete(`/sms/templates/${t}`)}},P=class extends j{endpoint="/vms.do";async sendVms(t,e,s,a){return await this.send({tts:e,ttsLector:s},{to:t},a)}async sendVmsWithLocalFile(t,e,s){return await this.send({localPath:e},{to:t},s)}async sendVmsWithRemoteFile(t,e,s){return await this.send({remotePath:e},{to:t},s)}async sendVmsToGroup(t,e,s,a){return await this.send({tts:e,ttsLector:s},{group:t},a)}async sendVmsWithLocalFileToGroup(t,e,s){return await this.send({localPath:e},{group:t},s)}async sendVmsWithRemoteFileToGroup(t,e,s){return await this.send({remotePath:e},{group:t},s)}};exports.SMSAPI=class{accessToken;httpClient;contacts;hlr;mms;profile;sendernames;sms;subusers;templates;vms;constructor(t){this.accessToken=t,this.httpClient=this.setHttpClient(),this.contacts=new S(this.httpClient),this.hlr=new $(this.httpClient),this.mms=new x(this.httpClient),this.profile=new H(this.httpClient),this.sendernames=new F(this.httpClient),this.sms=new L(this.httpClient),this.subusers=new T(this.httpClient),this.templates=new V(this.httpClient),this.vms=new P(this.httpClient)}getUserAgent(){return"smsapi/js-client:2.0.13"}setHttpClient(){const t=r.default.create({adapter:"http",baseURL:"https://smsapi.io/api",headers:{Accept:"application/json",Authorization:`Bearer ${this.accessToken}`,"User-Agent":this.getUserAgent()}});return t.interceptors.response.use(d),t}};